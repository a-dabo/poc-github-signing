# This is a basic workflow that is manually triggered

name: Test-AzureSignTool

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Testing Sign with Github and azure sign tool'
        # Default value if no value is explicitly provided
        default: 'AzureSignTool'
        # Input has to be provided for the workflow to run
        required: false
        # The data type of the input
        type: string

env:
  AZURE_PATH: '.'    # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '8.0.102'              # set this to the dotnet version to use

permissions:
    id-token: write
    contents: read
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  whoami:
    runs-on: windows-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
        
  signbinaries: # make sure the action works on a clean machine without building
    if: github.actor == 'a-dabo'
    runs-on: windows-latest
    steps:
    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Install AzureSignTool
      run: dotnet tool install --no-cache --global AzureSignTool --version 6.0.1
    - name: Azure login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZ_CLIENT_ID }}
        tenant-id: ${{ secrets.AZ_TENANT_ID }}
        subscription-id: ${{ secrets.AZ_SUBSCRIPTION_ID }}
    - name: Azure token
      run: |
        $az_token=$(az account get-access-token --scope https://vault.azure.net/.default --query accessToken --output tsv)
         echo "::add-mask::$az_token"
         echo "AZ_TOKEN=$az_token" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
    - name: Whitelist GitHub Runner IP
        run $runnerIP=$(curl -s https://api.ipify.org/)
        echo $runnerIP
        
    - name: "Get Repository Contents"
      uses: actions/checkout@main
    - name: Sign using azursigntool
      shell: cmd
      run: azuresigntool.exe sign --verbose -kvu https://archikeyvault.vault.azure.net -kvc CodeSigningCert -kva %AZ_TOKEN% -fd sha256 -tr http://timestamp.digicert.com -v Capsule.Grpc.Client.dll
    - name: Sign DLL
      uses: actions/upload-artifact@v4
      with:
          name: sign_dll
          path: Capsule.Grpc.Client.dll
    - name: Download all workflow run artifacts
      uses: actions/download-artifact@v4
